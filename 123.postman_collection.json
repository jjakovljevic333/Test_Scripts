{
	"info": {
		"_postman_id": "e65fb306-f7f9-4e40-8f5e-5259f892fa34",
		"name": "123",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login Copy",
			"item": [
				{
					"name": "Log1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d8a5ef79-d301-4d4f-8d0b-276fb8dea2aa",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "86d8bdf3-1278-4e50-ba4c-0b1c4b2aaaf4",
								"exec": [
									"//pick up id of user who is logged in in order to use this id for reading profile data",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"id_user\", jsonData.id);",
									"console.log(jsonData.id);",
									"//pick up id of user who is logged in in order to use this id for reading profile data",
									"",
									"//Assertions",
									"//Test1",
									"pm.test(\"User's ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(16);",
									"});",
									"",
									"//Test2",
									"pm.test(\"User's sex\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.sex).to.eql(\"FEMALE\");",
									"});",
									"",
									"//Test3",
									"pm.test(\"User's firstName\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.firstName).to.eql(\"Jelena\");",
									"});",
									"",
									"//Test4",
									"pm.test(\"User's lastName\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.lastName).to.eql(\"Jakovljevic\");",
									"});",
									"",
									"//Test5",
									"pm.test(\"User's pseudonym\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.pseudonym).to.eql(\"JelenaJ\");",
									"});",
									"",
									"//Test6",
									"pm.test(\"User's username\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.userName).to.eql(\"jelena.jakovljevic@seavus.com\");",
									"});",
									"",
									"//Test7",
									"pm.test(\"User's birthDate\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.birthDate).to.eql(\"1986-06-03\");",
									"});",
									"",
									"//Test8",
									"pm.test(\"User's profile created\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.created).to.eql(\"2018-01-24T10:42:03.75\");",
									"});",
									"",
									"//Test9",
									"pm.test(\"User's city\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.city).to.eql(\"Belgrade\");",
									"});",
									"",
									"//Test10",
									"pm.test(\"User's postCode\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.postCode).to.eql(\"11000\");",
									"});",
									"",
									"//Test11",
									"pm.test(\"User's profile picture\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.imageUri).to.eql(\"/images/u_16.jpg\");",
									"});",
									"",
									"//Test12",
									"pm.test(\"User's background picture\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.backgroundImageUri).to.eql(\"/images/u_16.jpg\");",
									"});",
									"",
									"//Test13",
									"pm.test(\"User's hasWinning\", function () {",
									"   var jsonData = pm.response.json();",
									"   pm.expect(jsonData.hasWinnings).to.eql(\"false\");",
									"});",
									"",
									"//Test14",
									"pm.test(\"Pop-up with lottery explanation is visible\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lotteryExplanationFlag).to.eql(true);",
									"});",
									"",
									"//Test15",
									"pm.test(\"Pop-up with group detail explanation is visible\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.groupExplanationFlag).to.eql(true);",
									"});",
									"",
									"// Status code",
									"//Test16",
									"",
									"//Test17",
									"pm.expect(pm.response.code).to.be.below(1000);",
									"",
									"postman.setNextRequest(\"Jackpot\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"lara@yahoo.com\",\r\n  \"password\": \"password!7\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/users/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d8a5ef79-d301-4d4f-8d0b-276fb8dea2aa",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "dc95cb57-d810-42f9-b528-0249f3c9d0b4",
								"type": "text/javascript",
								"exec": [
									"//pick up id of user who is logged in in order to use this id for reading profile data",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"id_user\", jsonData.id);",
									"console.log(jsonData.id);",
									"//pick up id of user who is logged in in order to use this id for reading profile data",
									"",
									"//Test1",
									"pm.test(\"Body matches id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"//Test2",
									"pm.test(\"Body matches sex\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sex\");",
									"});",
									"",
									"//Test3",
									"pm.test(\"Body matches firstName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"firstName\");",
									"});",
									"",
									"//Test4",
									"pm.test(\"Body matches lastName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lastName\");",
									"});",
									"",
									"//Test5",
									"pm.test(\"Body matches pseudonym\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"pseudonym\");",
									"});",
									"",
									"//Test6",
									"pm.test(\"Body matches sex\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sex\");",
									"});",
									"",
									"//Test7",
									"pm.test(\"Body matches userName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"userName\");",
									"});",
									"",
									"//Test8",
									"pm.test(\"Body matches birthDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"birthDate\");",
									"});",
									"",
									"//Test9",
									"pm.test(\"Body matches date when user created\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"created\");",
									"});",
									"",
									"//Test10",
									"pm.test(\"Body matches street\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"street\");",
									"});",
									"",
									"//Test11",
									"pm.test(\"Body matches city\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"city\");",
									"});",
									"",
									"//Test12",
									"pm.test(\"Body matches date when user postCode\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"postCode\");",
									"});",
									"",
									"//Test13",
									"pm.test(\"Body matches imageUri\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"imageUri\");",
									"});",
									"",
									"//Test14",
									"pm.test(\"Body matches backgroundImageUri\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"backgroundImageUri\");",
									"});",
									"",
									"//Test15",
									"pm.test(\"Body matches date when user token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"",
									"//Test16",
									"pm.test(\"Body matches date when user hasWinnings\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hasWinnings\");",
									"});",
									"",
									"",
									"//Test17",
									"pm.test(\"Body matches date when user groupExplanationFlag\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"groupExplanationFlag\");",
									"});",
									"",
									"",
									"//Test18",
									"pm.test(\"Body matches date when user lotteryExplanationFlag\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lotteryExplanationFlag\");",
									"});",
									"",
									"//Test19",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Test20",
									"pm.test(\"Pop-up with lottery explanation is visible\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lotteryExplanationFlag).to.eql(true);",
									"});",
									"",
									"//Test21",
									"pm.test(\"Pop-up with group detail explanation is visible\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.groupExplanationFlag).to.eql(true);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"jj15@gmail.com\",\r\n  \"password\": \"password!7\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/users/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d8a5ef79-d301-4d4f-8d0b-276fb8dea2aa",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5d3a60d4-c969-4383-a107-1dfdaeb40a55",
								"type": "text/javascript",
								"exec": [
									"//pick up id of user who is logged in in order to use this id for reading profile data",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"id_user\", jsonData.id);",
									"console.log(jsonData.id);",
									"//pick up id of user who is logged in in order to use this id for reading profile data",
									"",
									"//Test1",
									"pm.test(\"Body matches id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"//Test2",
									"pm.test(\"Body matches sex\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sex\");",
									"});",
									"",
									"//Test3",
									"pm.test(\"Body matches firstName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"firstName\");",
									"});",
									"",
									"//Test4",
									"pm.test(\"Body matches lastName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lastName\");",
									"});",
									"",
									"//Test5",
									"pm.test(\"Body matches pseudonym\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"pseudonym\");",
									"});",
									"",
									"//Test6",
									"pm.test(\"Body matches sex\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sex\");",
									"});",
									"",
									"//Test7",
									"pm.test(\"Body matches userName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"userName\");",
									"});",
									"",
									"//Test8",
									"pm.test(\"Body matches birthDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"birthDate\");",
									"});",
									"",
									"//Test9",
									"pm.test(\"Body matches date when user created\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"created\");",
									"});",
									"",
									"//Test10",
									"pm.test(\"Body matches street\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"street\");",
									"});",
									"",
									"//Test11",
									"pm.test(\"Body matches city\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"city\");",
									"});",
									"",
									"//Test12",
									"pm.test(\"Body matches date when user postCode\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"postCode\");",
									"});",
									"",
									"//Test13",
									"pm.test(\"Body matches imageUri\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"imageUri\");",
									"});",
									"",
									"//Test14",
									"pm.test(\"Body matches backgroundImageUri\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"backgroundImageUri\");",
									"});",
									"",
									"//Test15",
									"pm.test(\"Body matches date when user token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"",
									"//Test16",
									"pm.test(\"Body matches date when user hasWinnings\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hasWinnings\");",
									"});",
									"",
									"//Test17",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"//Test17",
									"pm.test(\"Body matches date when user groupExplanationFlag\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"groupExplanationFlag\");",
									"});",
									"",
									"",
									"//Test18",
									"pm.test(\"Body matches date when user lotteryExplanationFlag\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lotteryExplanationFlag\");",
									"});",
									"",
									"//Test19",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Test20",
									"pm.test(\"Pop-up with lottery explanation is visible\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lotteryExplanationFlag).to.eql(true);",
									"});",
									"",
									"//Test21",
									"pm.test(\"Pop-up with group detail explanation is visible\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.groupExplanationFlag).to.eql(true);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"pp@kkk.com\",\r\n  \"password\": \"password!7\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/users/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log4",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d8a5ef79-d301-4d4f-8d0b-276fb8dea2aa",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4cdbd67b-0452-4bb3-9b5f-5c1350110905",
								"type": "text/javascript",
								"exec": [
									"//pick up id of user who is logged in in order to use this id for reading profile data",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"id_user\", jsonData.id);",
									"console.log(jsonData.id);",
									"//pick up id of user who is logged in in order to use this id for reading profile data",
									"",
									"//Test1",
									"pm.test(\"Body matches id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"//Test2",
									"pm.test(\"Body matches sex\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sex\");",
									"});",
									"",
									"//Test3",
									"pm.test(\"Body matches firstName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"firstName\");",
									"});",
									"",
									"//Test4",
									"pm.test(\"Body matches lastName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lastName\");",
									"});",
									"",
									"//Test5",
									"pm.test(\"Body matches pseudonym\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"pseudonym\");",
									"});",
									"",
									"//Test6",
									"pm.test(\"Body matches sex\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sex\");",
									"});",
									"",
									"//Test7",
									"pm.test(\"Body matches userName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"userName\");",
									"});",
									"",
									"//Test8",
									"pm.test(\"Body matches birthDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"birthDate\");",
									"});",
									"",
									"//Test9",
									"pm.test(\"Body matches date when user created\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"created\");",
									"});",
									"",
									"//Test10",
									"pm.test(\"Body matches street\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"street\");",
									"});",
									"",
									"//Test11",
									"pm.test(\"Body matches city\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"city\");",
									"});",
									"",
									"//Test12",
									"pm.test(\"Body matches date when user postCode\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"postCode\");",
									"});",
									"",
									"//Test13",
									"pm.test(\"Body matches imageUri\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"imageUri\");",
									"});",
									"",
									"//Test14",
									"pm.test(\"Body matches backgroundImageUri\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"backgroundImageUri\");",
									"});",
									"",
									"//Test15",
									"pm.test(\"Body matches date when user token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"",
									"//Test16",
									"pm.test(\"Body matches date when user hasWinnings\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hasWinnings\");",
									"});",
									"",
									"//Test17",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"//Test17",
									"pm.test(\"Body matches date when user groupExplanationFlag\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"groupExplanationFlag\");",
									"});",
									"",
									"",
									"//Test18",
									"pm.test(\"Body matches date when user lotteryExplanationFlag\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lotteryExplanationFlag\");",
									"});",
									"",
									"//Test19",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Test20",
									"pm.test(\"Pop-up with lottery explanation is visible\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lotteryExplanationFlag).to.eql(true);",
									"});",
									"",
									"//Test21",
									"pm.test(\"Pop-up with group detail explanation is visible\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.groupExplanationFlag).to.eql(true);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"yy@gmail.com\",\r\n  \"password\": \"password!7\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/users/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log5",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d8a5ef79-d301-4d4f-8d0b-276fb8dea2aa",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d07190ec-5a9a-4b47-9271-ac3348cc3008",
								"type": "text/javascript",
								"exec": [
									"//pick up id of user who is logged in in order to use this id for reading profile data",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"id_user\", jsonData.id);",
									"console.log(jsonData.id);",
									"//pick up id of user who is logged in in order to use this id for reading profile data",
									"",
									"//Test1",
									"pm.test(\"Body matches id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"//Test2",
									"pm.test(\"Body matches sex\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sex\");",
									"});",
									"",
									"//Test3",
									"pm.test(\"Body matches firstName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"firstName\");",
									"});",
									"",
									"//Test4",
									"pm.test(\"Body matches lastName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lastName\");",
									"});",
									"",
									"//Test5",
									"pm.test(\"Body matches pseudonym\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"pseudonym\");",
									"});",
									"",
									"//Test6",
									"pm.test(\"Body matches sex\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sex\");",
									"});",
									"",
									"//Test7",
									"pm.test(\"Body matches userName\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"userName\");",
									"});",
									"",
									"//Test8",
									"pm.test(\"Body matches birthDate\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"birthDate\");",
									"});",
									"",
									"//Test9",
									"pm.test(\"Body matches date when user created\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"created\");",
									"});",
									"",
									"//Test10",
									"pm.test(\"Body matches street\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"street\");",
									"});",
									"",
									"//Test11",
									"pm.test(\"Body matches city\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"city\");",
									"});",
									"",
									"//Test12",
									"pm.test(\"Body matches date when user postCode\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"postCode\");",
									"});",
									"",
									"//Test13",
									"pm.test(\"Body matches imageUri\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"imageUri\");",
									"});",
									"",
									"//Test14",
									"pm.test(\"Body matches backgroundImageUri\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"backgroundImageUri\");",
									"});",
									"",
									"//Test15",
									"pm.test(\"Body matches date when user token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"",
									"//Test16",
									"pm.test(\"Body matches date when user hasWinnings\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hasWinnings\");",
									"});",
									"",
									"//Test17",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"//Test17",
									"pm.test(\"Body matches date when user groupExplanationFlag\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"groupExplanationFlag\");",
									"});",
									"",
									"",
									"//Test18",
									"pm.test(\"Body matches date when user lotteryExplanationFlag\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lotteryExplanationFlag\");",
									"});",
									"",
									"//Test19",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Test20",
									"pm.test(\"Pop-up with lottery explanation is visible\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lotteryExplanationFlag).to.eql(true);",
									"});",
									"",
									"//Test21",
									"pm.test(\"Pop-up with group detail explanation is visible\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.groupExplanationFlag).to.eql(true);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"jj65@gmail.com\",\r\n  \"password\": \"password!7\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/users/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}